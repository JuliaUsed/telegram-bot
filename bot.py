from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler, ContextTypes
import os
import random
import asyncio

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = os.getenv('TELEGRAM_TOKEN')
if not TOKEN:
    raise ValueError("Please set the TELEGRAM_TOKEN secret in the Secrets tab")

# –î–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞
quotes = [
    "You are free. You can fly anywhere and be anything you want. Your limits are only in your mind. ‚Äî Richard Bach",
    "The only true law is the one that leads to freedom. ‚Äî Richard Bach",
    "The gull that sees farther flies higher. ‚Äî Richard Bach",
    "Your only obligation in life is to be true to yourself. ‚Äî Richard Bach",
    "Perfection knows no limits. ‚Äî Richard Bach",
    "Freedom is the ability to make a choice without looking back at fear or doubt. ‚Äî Richard Bach",
    "The path to truth always goes through doubts. ‚Äî Richard Bach",
    "Every seagull knows deep down that it was born to fly. ‚Äî Richard Bach"
]

memes = [
    "https://i.postimg.cc/GhBMrcBs/IMG-3098.jpg",
    "https://i.postimg.cc/BvJc8svp/IMG-3096.jpg",
    "https://i.postimg.cc/23pnCNJ4/IMG-3095.jpg",
    "https://i.postimg.cc/wBWfg3kL/IMG-3080.jpg",
    "https://i.postimg.cc/FRLj8KC9/IMG-3078.jpg",
    "https://i.postimg.cc/Mpp1x533/IMG-3077.jpg"
]

beach_coordinates = [
    "-8.705139, 115.172136 üìç",
    "-8.725354, 115.164565 üìç",
    "-8.808482, 115.146652 üìç",
    "-8.829246, 115.087490 üìç",
    "-8.671686, 115.128072 üìç"
]

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
async def return_to_menu(update: Update) -> None:
    keyboard = [
        [InlineKeyboardButton("üéâ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ", callback_data="congratulation")],
        [InlineKeyboardButton("üòã –ú–µ–º", callback_data="meme")],
        [InlineKeyboardButton("üé• –ì–∞–¥–∞–µ–º –Ω–∞ –∫–Ω–∏–∂–∫–∞—Ö", callback_data="wisdom")],
        [InlineKeyboardButton("üéÅ –í–∞—à –ø–æ–¥–∞—Ä–æ–∫", callback_data="gift")],
        [InlineKeyboardButton("‚ö°Ô∏è –£–¥–∞—Ä–∏—Ç—å—Å—è —Ç–æ–∫–æ–º", callback_data="shock")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    if update.message:  # –î–ª—è –∫–æ–º–∞–Ω–¥—ã /start
        await update.message.reply_text("–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=reply_markup)
    elif update.callback_query:  # –î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é
        await update.callback_query.message.reply_text("–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=reply_markup)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è
async def congratulation(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    await query.answer()
    await query.edit_message_text(text="–ù–æ–º–µ—Ä –∑–Ω–∞–µ—à—å üòâ")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–µ–º–æ–≤
async def meme(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    await query.answer()
    meme_url = random.choice(memes)
    await query.edit_message_text(text=f"–í–æ—Ç –º–µ–º –¥–ª—è —Ç–µ–±—è: [–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–µ–º]({meme_url})", parse_mode="Markdown")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º—É–¥—Ä—ã—Ö —Ü–∏—Ç–∞—Ç
async def wisdom(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    await query.answer()
    quote = random.choice(quotes)
    await query.edit_message_text(text=f"–≠—Ç–æ –¥–ª—è —Ç–µ–±—è:\n\n\"{quote}\"")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–¥–∞—Ä–∫–∞
async def gift(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    await query.answer()
    keyboard = [
        [InlineKeyboardButton("—è", callback_data="smile_response")],
        [InlineKeyboardButton("–∞ —Å–∞–º–∞ —Ç–æ))", callback_data="smile_response")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await query.edit_message_text(text="–ê –∫—Ç–æ —ç—Ç–æ —Ç—É—Ç —É –Ω–∞—Å —É–ª—ã–±–∞–µ—Ç—Å—è?))", reply_markup=reply_markup)

# –û—Ç–≤–µ—Ç –Ω–∞ —É–ª—ã–±–∫—É
async def smile_response(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    await query.answer()
    keyboard = [
        [InlineKeyboardButton("–í—ã–±–∏—Ä–∞–π, –≥–¥–µ –ø–æ–ª—É—á–∏—Ç—å))", callback_data="beach_coordinates")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await query.edit_message_text(text="–í—ã–±–∏—Ä–∞–π, –≥–¥–µ –ø–æ–ª—É—á–∏—Ç—å))", reply_markup=reply_markup)

# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
async def beach_coordinates_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    await query.answer()
    await query.edit_message_text(text="–°–µ–∫—É–Ω–¥–æ—á–∫—É, –≤—ã–±–∏—Ä–∞—é –ª—É—á—à–∏–µ –ø–ª—è–∂–∏...")
    for coord in beach_coordinates:
        await asyncio.sleep(1)  # –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
        await query.message.reply_text(coord)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è "—É–¥–∞—Ä–∏—Ç—å—Å—è —Ç–æ–∫–æ–º"
async def shock(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    await query.answer()
    message_text = (
        "‚ö°Ô∏è –ü—Ä–µ–¥—Å—Ç–∞–≤—å, –∫–∞–∫ –º—ã —Å–ª–µ–≥–∫–∞ –ø—å—è–Ω–µ–Ω—å–∫–∏–µ –≤ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–µ, —Å–ø—É—Å—Ç—è –º–Ω–æ–≥–æ —Ç–æ—Å—Ç–æ–≤, –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–π –∏ —à—É—Ç–æ–∫, "
        "–≤—Å—Ç–∞–µ–º —Ç–∞–Ω—Ü–µ–≤–∞—Ç—å, —É—Å–ª—ã—à–∞–≤ –∑–Ω–∞–∫–æ–º—ã–π –º–æ—Ç–∏–≤. –Ø —Å–º–æ—Ç—Ä—é —Ç–µ–±–µ –≤ –≥–ª–∞–∑–∞ –∏ –ø–æ–∑–¥—Ä–∞–≤–ª—è—é —Å —Ç–≤–æ–∏–º –¥–Ω–µ–º, —Ç–æ–ª—å–∫–æ –Ω–∞ –¥—Ä—É–≥–æ–º —è–∑—ã–∫–µ, –∞ –Ω–µ –ø–∞–π—Ç–æ–Ω–µ))\n\n"
        "üéµ –°–ª—É—à–∞–π —Ç—Ä–µ–∫ –∑–¥–µ—Å—å: [O Children - Nick Cave & The Bad Seeds](https://music.yandex.ru/album/4334256/track/463836?utm_medium=copy_link)"
    )
    await query.edit_message_text(text=message_text, parse_mode="Markdown")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await return_to_menu(update)

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞
def main():
    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(congratulation, pattern="congratulation"))
    app.add_handler(CallbackQueryHandler(meme, pattern="meme"))
    app.add_handler(CallbackQueryHandler(wisdom, pattern="wisdom"))
    app.add_handler(CallbackQueryHandler(gift, pattern="gift"))
    app.add_handler(CallbackQueryHandler(smile_response, pattern="smile_response"))
    app.add_handler(CallbackQueryHandler(beach_coordinates_handler, pattern="beach_coordinates"))
    app.add_handler(CallbackQueryHandler(shock, pattern="shock"))

    app.run_polling()

if __name__ == "__main__":
    main()
